generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Admin {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())
}

model User {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  email         String         @unique
  password      String
  isActive      Boolean        @default(true)
  revokedAt     DateTime?
  emailVerified Boolean        @default(false)
  role          String         @default("user")
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  Order         Order[]
  Session       Session[]
  cartItem      CartItem[]
  wishlistItem  WishlistItem[]
}

model Session {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  token     String   @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique @db.ObjectId
  createdAt DateTime @default(now())
  expiresAt DateTime
}

model Book {
  id             String         @id @default(auto()) @map("_id") @db.ObjectId
  title          String
  description    String
  author         String
  genre          String
  price          Float
  coverImageUrl  String
  fileUrl        String
  sampleUrl      String?
  ratings        Float          @default(0)
  totalDownloads Int            @default(0)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  cartItems      CartItem[]
  OrderItem      OrderItem[]
  wishlistItems  WishlistItem[]
}

model CartItem {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  user     User   @relation(fields: [userId], references: [id])
  userId   String @db.ObjectId
  book     Book   @relation(fields: [bookId], references: [id])
  bookId   String @db.ObjectId
  quantity Int    @default(1)

  @@unique([userId, bookId])
}

model WishlistItem {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId
  book   Book   @relation(fields: [bookId], references: [id])
  bookId String @db.ObjectId

  @@unique([userId, bookId])
}

model Order {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  userId     String      @db.ObjectId
  user       User        @relation(fields: [userId], references: [id])
  orderId    String
  paymentId  String
  amount     Int
  status     String
  createdAt  DateTime    @default(now())
  orderItems OrderItem[]
}

model OrderItem {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  order   Order  @relation(fields: [orderId], references: [id])
  orderId String @db.ObjectId
  book    Book   @relation(fields: [bookId], references: [id])
  bookId  String @db.ObjectId
  price   Float
}
